<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
  <Description/>
  <DefaultFaultRule name="failed-default-control">
    <Step>
      <Condition>(raisefault.RF-EXCEPTION.failed = true)</Condition>
      <Name>AM-RESPONSE-TEMPLATE</Name>
    </Step>
    <AlwaysEnforce>true</AlwaysEnforce>
  </DefaultFaultRule>
  <PreFlow name="PreFlow">
    <Request>
      <Step>
        <Name>Q-Rule-Engine</Name>
      </Step>
      <Step>
        <Name>CORS</Name>
      </Step>
      <Step>
        <Name>OAS_MCM_Rule_Engine</Name>
      </Step>
      <Step>
        <Name>FC-APIKEY</Name>
        <Condition>request.header.apikey != null</Condition>
      </Step>
      <Step>
        <Condition>(request.header.Authorization != '') or (request.header.Authorization != null) and (request.header.apikey == null )</Condition>
        <Name>FC-VALIDATE-OAUTH2</Name>
      </Step>
      <Step>
        <Condition>(request.header.Authorization == '') or (request.header.Authorization == null) and (request.header.apikey == null )</Condition>
        <Name>AM-ERROR-VERIFY-OAUTH2</Name>
      </Step>
      <Step>
        <Name>FC-LOGGING</Name>
      </Step>
      <Step>
        <Condition>(flow.error.code != null)</Condition>
        <Name>RF-EXCEPTION</Name>
      </Step>
    </Request>
    <Response/>
  </PreFlow>
  <PostFlow name="PostFlow">
    <Request/>
    <Response>
      <Step>
        <Name>FC-LOGGING</Name>
      </Step>
    </Response>
  </PostFlow>
  <Flows>
    <Flow name="POST /rules">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rules") and (request.verb = "POST")</Condition>
    </Flow>
    <Flow name="GET /rules">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rules") and (request.verb = "GET")</Condition>
    </Flow>
    <Flow name="GET /rules/{id}">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rules/*") and (request.verb = "GET")</Condition>
    </Flow>
    <Flow name="PUT /rules/{id}">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rules/*") and (request.verb = "PUT")</Condition>
    </Flow>
    <Flow name="DELETE /rules/{id}">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rules/*") and (request.verb = "DELETE")</Condition>
    </Flow>
    <Flow name="POST /rulesets/execute">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rulesets/execute") and (request.verb = "POST")</Condition>
    </Flow>
    <Flow name="POST /rulesets">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rulesets") and (request.verb = "POST")</Condition>
    </Flow>
    <Flow name="GET /rulesets/{id}">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rulesets/*") and (request.verb = "GET")</Condition>
    </Flow>
    <Flow name="PUT /rulesets/{id}">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rulesets/*") and (request.verb = "PUT")</Condition>
    </Flow>
    <Flow name="DELETE /rulesets/{id}">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rulesets/*") and (request.verb = "DELETE")</Condition>
    </Flow>
    <Flow name="GET /rulesets">
      <Description/>
      <Request/>
      <Response>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/rulesets") and (request.verb = "GET")</Condition>
    </Flow>
  </Flows>
  <HTTPProxyConnection>
    <BasePath>/business/rules-engine</BasePath>
    <Properties/>
    <VirtualHost>default</VirtualHost>
  </HTTPProxyConnection>
  <RouteRule name="workflow-executions">
    <Condition>(proxy.pathsuffix MatchesPath "/rulesets/execute") and (request.verb = "POST")</Condition>
    <TargetEndpoint>workflow-executions</TargetEndpoint>
  </RouteRule>
  <RouteRule name="rulengine-service">
    <TargetEndpoint>rulengine-service</TargetEndpoint>
  </RouteRule>
  <!--RouteRule name="GoNowhere"/-->
</ProxyEndpoint>
